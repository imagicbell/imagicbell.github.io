{"pageProps":{"post":{"title":"Automatic Chain's Construction On wheel Models","date":"2018-06-07T16:00:00+08:00","slug":"2018-6-7-auto-draw-chain-on-wheels","description":"An algorithm to construct the chains around one or more wheels from the very basic small parts in Unity.","ogImage":"/blog/assets/img-auto-draw-chain/3.jpg","categories":["Unity"],"readTime":2,"content":"<p>Rencently I did have fun with a project which I'd like to share. It is to construct a chain automatically on wheels. Like these:</p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-auto-draw-chain/1.png\" alt=\"\"></p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-auto-draw-chain/2.jpg\" alt=\"\"></p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-auto-draw-chain/3.jpg\" alt=\"\"></p>\n<p>The conditions and requirements are:</p>\n<ol>\n<li>The wheels are shaped as circles, of course. </li>\n<li>The wheels must be in the same plane, which means they share the same <strong>forward</strong> direction. However the direction can be any.</li>\n<li>The radius of wheels can be different.</li>\n<li>There are 3 different alignment as you see above: <ol>\n<li>only one wheel</li>\n<li>wheels are queued in one line</li>\n<li>wheels are enclosed by end to end.</li></ol></li>\n</ol>\n<h3 id=\"section-solutions\">Solutions</h3>\n<p>Even though all the models lay in the 3D world, this problem can be simplified in 2D, as given the Condition 2.</p>\n<p>Inspired by a plugin called <a href=\"https://assetstore.unity.com/packages/tools/modeling/splinemesh-104989\" rel=\"noopener noreferrer\" target=\"_blank\">SplineMesh</a>, to construct the chain, we must build the curve at first, which enables to calculate the position and tangent of any point on the curve.</p>\n<p><strong>So the problem is focused on building a curve that encompasses the circles.</strong></p>\n<p>As for the situation of one wheel, this is quite straight forward. Given a circle's center, radius, and the up direction, calculate the sampled points on the circle.</p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-auto-draw-chain/4.jpg\" alt=\"\"></p>\n<p>For situations of multiple circles, we should first try to calculate the <strong>tangent lines</strong> between circles.</p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-auto-draw-chain/5.png\" alt=\"\"></p>\n<p>There are 4 tangent lines in total between 2 circles, but we only need the outer two.</p>\n<p>Here is my method to compute the tangent lines.</p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-auto-draw-chain/6.png\" alt=\"\"></p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-auto-draw-chain/7.jpg\" alt=\"\"></p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-auto-draw-chain/8.jpg\" alt=\"\"></p>\n<p>The other 3 tangent points are calculated likely.</p>\n<p>However, this is the situation that the circle 1 is larger than circle 2. The \"lower equal\" situation should also be considered. But the calculations are almost the same.</p>\n<p>Now we get the 4 points with their position and tangent, we can calculate all the sampled points on the curve, which is the curve is succesfully built.</p>\n<p>One last problem is the situation that wheels are enclosed. Only 2 points out of the 4 calculated above are used, which is only one tangent line standing out. I choose the tangent line with the same direction to the circles' center line, in condition that the circles are chosen in counterclockwise, because all the rotation calculation above are based on counterclockwise system. </p>\n<p>Of course, the solution I got has some limitations, which does not have to be considered in our applications. Like this:</p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-auto-draw-chain/9.jpg\" alt=\"\"></p>\n<p>The extra work is to give some specifications in calculations. I'm here only to give some inspirations. Or if you could figure out a more general way.  Please feel free to share and have fun!</p>\n<p><a href=\"/posts/2018-6-10-chain-animation-on-wheels\" rel=\"noopener noreferrer\" target=\"_blank\">Next blog</a> will introduce the animation calculation of the chains.</p>"},"postNav":{"previous":"/posts/2018-3-31-thread-in-unity","next":"/posts/2018-6-10-chain-animation-on-wheels"},"morePosts":[{"slug":"2018-6-10-chain-animation-on-wheels","title":"Automatic Chain's Animation On wheel Models","date":"2018-06-10T16:00:00+08:00","locale":"en","readTime":3,"excerpt":"<p>In last blog, I introduced the construction of the chains on wheels. This blog will tell the animation calculations. The...</p>"},{"slug":"2018-3-31-thread-in-unity","title":"Use Thread In Unity","date":"2018-03-31T13:00:00+08:00","locale":"en","readTime":2,"excerpt":"<p>It's been a long time since my last blog, as I've recently spent plenty of time to save a dying...</p>"},{"slug":"2018-1-20-orthographic-camera-computing","title":"Restrict Object In Specified Screen Area Using Orthographic Camera","date":"2018-01-20T15:00:00+08:00","locale":"en","ogImage":"/blog/assets/img-orthographic-camera/1.JPG","readTime":3,"excerpt":"<p>Iâ€™ve encountered a problem to adjust the position of orthographic camera for restricting 3D objects in the specified rectangle area...</p>"},{"slug":"2017-12-1-unity-image-manipulation","title":"Manipulate UGUI Image Mesh","date":"2017-12-01T17:00:00+08:00","locale":"en","readTime":4,"excerpt":"<p>It is known that the Image component in Unity UI can draw a texture under canvas. There are basically 4...</p>"}]},"__N_SSG":true}