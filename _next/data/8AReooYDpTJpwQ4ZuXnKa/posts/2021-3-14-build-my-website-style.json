{"pageProps":{"post":{"title":"How To Build My Own Website (3) - Style","date":"2021-03-14T20:00:00+08:00","slug":"2021-3-14-build-my-website-style","categories":["Front-End"],"readTime":2,"content":"<h2 id=\"section-contents\">Contents</h2>\n<ol>\n<li><a href=\"/posts/2021-3-10-build-my-website-nextjs\" rel=\"noopener noreferrer\" target=\"_blank\">The choice of Next.js</a></li>\n<li><a href=\"/posts/2021-3-12-build-my-website-markdown\" rel=\"noopener noreferrer\" target=\"_blank\">Parse and Display Markdown</a></li>\n<li>Style my website</li>\n<li><a href=\"/posts/2021-6-5-build-my-website-image-opti\" rel=\"noopener noreferrer\" target=\"_blank\">Image Optimization</a></li>\n</ol>\n<p><br></p>\n<h2 id=\"section-tailwindcss\">Tailwindcss</h2>\n<p>When considering styling, what comes in my mind is to choose a CSS framework. <a href=\"https://tailwindcss.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Tailwindcss</a> wins against other popular frameworks, like <a href=\"https://getbootstrap.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Bootstrap</a> and <a href=\"https://get.foundation/\" rel=\"noopener noreferrer\" target=\"_blank\">Foundation</a>. The main reasons are:</p>\n<ol>\n<li><p>I have used <strong>Bootstrap</strong> for beginning, as it is the most widely used CSS framework and has <a href=\"https://react-bootstrap.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">React supported</a>. However, I found it is too powerful, making customization difficult. </p></li>\n<li><p>I haven't used <strong>Foundation</strong>. I am happy to try it, but it seems a little hard to start with. </p></li>\n<li><p><strong>Tailwindcss</strong> is light, and most importantly it is highly customizable. As it says:</p>\n<blockquote>\n  <p>Rapidly build modern websites without ever leaving your HTML.</p>\n  <p>A utility-first CSS framework packed with classes like <code>flex</code>, <code>pt-4</code>, <code>text-center</code> and <code>rotate-90</code> that can be composed to build any design, directly in your markup.</p>\n</blockquote>\n<p>So we can easily understand what is behind these styles, and compose whatever css properties to achieve the desired style.</p></li>\n<li><p>I am familiar with the raw CSS styles. <strong>Tailwindcss</strong> pre-defines almost all the common styles in so called <strong>utility classes</strong>. So I can quickly style an element without writing any CSS code. Besides, VSCode has <a href=\"https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss\" rel=\"noopener noreferrer\" target=\"_blank\">Tailwind CSS IntelliSense</a> to help me quickly tap utility classes.</p></li>\n</ol>\n<p>Below is an example of using <strong>tailwindcss</strong> in my website.</p>\n<pre><code class=\"html language-html\">&lt;div className=\"text-xs text-theme-meta absolute bottom-2 flex flex-col sm:flex-row sm:items-center\"&gt;\n  &lt;DateFormatter dateString={post.date} /&gt;\n  &lt;Dot className=\"mx-2 border-theme-meta hidden sm:block\"/&gt;\n  &lt;span&gt;{`${post.readTime}min read`}&lt;/span&gt;\n&lt;/div&gt;</code></pre>\n<p>In this block of code, I used </p>\n<ol>\n<li><a href=\"https://tailwindcss.com/docs/customizing-colors\" rel=\"noopener noreferrer\" target=\"_blank\">customized color</a>: <code>theme-meta</code>, so <code>text-theme-meta</code> makes the color of the text as I defined.</li>\n<li><a href=\"https://tailwindcss.com/docs/responsive-design\" rel=\"noopener noreferrer\" target=\"_blank\">responsive design</a>: <code>sm:flex-row sm:items-center</code>, so the <code>flex-direction</code> is <code>col</code> when the screen width is smaller than 640px, otherwise <code>row</code>, and the <code>align-items</code> is <code>start</code> when the screen width is smaller than 640px, otherwise <code>center</code>.</li>\n</ol>\n<h2 id=\"section-theme-color-configurable\">Theme Color Configurable</h2>\n<p>As <strong>Tailwindcss</strong> enables highly customization, I can define my own favor <a href=\"https://tailwindcss.com/docs/theme\" rel=\"noopener noreferrer\" target=\"_blank\">theme</a> in <code>tailwind.config.js</code>. This configuration file is javascript, which means I can use variables, functions, etc. So it is easy to make my theme color configurable.</p>\n<pre><code class=\"javascript language-javascript\">const colors = require('tailwindcss/colors');\nconst themeColor = colors.red;\n\nmodule.exports = {\n  theme: {\n    extend: {\n      colors: {\n        theme: {\n          meta: colors.coolGray[500],\n          link: {\n            DEFAULT: themeColor[500],\n            highlight: themeColor[700],\n            disable: themeColor[400],\n          },\n          bg: {\n            DEFAULT: themeColor[300],\n            light: themeColor[200],\n            strong: {\n              DEFAULT: themeColor[500],\n              text: colors.white,\n            }\n          },\n          border: {\n            DEFAULT: themeColor[300],\n          },\n          line: {\n            DEFAULT: themeColor[200]\n          }\n        },\n      },\n    },\n  },\n}</code></pre>\n<p>So if I change the <code>themeColor</code> from <code>colors.red</code> to <code>colors.lightBlue</code>, the result will be like this:</p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-my-website/5.jpg\" alt=\"\"></p>\n<p>It looks also pretty cool. The color can be any color you what, in <strong>hex</strong> or <strong>rgb</strong>.</p>\n<p>In addition to <code>colors</code>, there are many more properties can be extended or overrided, like <code>padding</code>, <code>fontSize</code>, <code>boxShadow</code>, etc. For details, check the <a href=\"https://tailwindcss.com/docs/theme\" rel=\"noopener noreferrer\" target=\"_blank\">doc</a>.</p>\n<h2 id=\"section-animation\">Animation</h2>\n<p>For page scrolling effect, which bumps up content one by one, I use the <a href=\"https://michalsnik.github.io/aos/\" rel=\"noopener noreferrer\" target=\"_blank\">AOS</a>. It earns many github stars. It supports many effects like fade-in, flip, zoom, etc. The installation and usage is quite simple.</p>\n<p>After installing, I put the initialization code in the React <code>useEffect</code> hook in <code>_app.js</code>.</p>\n<pre><code class=\"jsx language-jsx\">export default function MyApp({ Component, pageProps }) {\n  //...\n  useEffect(() =&gt; {\n    AOS.init({\n      once: true,\n    });\n  }, []);\n  //...\n}</code></pre>\n<p>Next.js uses the <code>App</code> component to initialize pages. We can override it with our customized component for adding features to the page initialization.</p>"},"postNav":{"previous":"/posts/2021-3-12-build-my-website-markdown","next":"/posts/2021-6-5-build-my-website-image-opti"},"morePosts":[{"slug":"2021-6-5-build-my-website-image-opti","title":"How To Build My Own Website (4) - Image Optimization","date":"2021-06-05T20:00:00+08:00","locale":"en","excerpt":"This article illustrates how I applied image optimization to improve the performance of my website.","readTime":0},{"slug":"2021-3-12-build-my-website-markdown","title":"How To Build My Own Website (2) - Markdown","date":"2021-03-12T20:00:00+08:00","locale":"en","readTime":3,"excerpt":"<p>Parsing and displaying Markdown files are one of the most important things in building a personal website, because all my...</p>"},{"slug":"2021-3-10-build-my-website-nextjs","title":"How To Build My Own Website (1) - Next.js","date":"2021-03-10T20:00:00+08:00","locale":"en","readTime":5,"excerpt":"<p>I had always dreamed of building my own website, to express myself, to keep memory of what I have done,...</p>"},{"slug":"2021-2-19-mock-requestanimationframe-in-jest","title":"Mock requestAnimationFrame in Jest","date":"2021-02-19T10:00:00+08:00","locale":"en","readTime":1,"excerpt":"<p>When I wrote test for my tiny rhythm game, I realized that all the browser based actions needed to be...</p>"}]},"__N_SSG":true}