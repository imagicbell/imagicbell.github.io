{"pageProps":{"post":{"title":"Google Blockly Reimplementation With Unity/C#(1)","date":"2017-10-11T20:00:00+08:00","slug":"2017-10-11-blockly-one","ogImage":"/blog/assets/img-blockly/Demo.png","categories":["Unity"],"readTime":1,"content":"<h2 id=\"section-contents\">Contents</h2>\n<ol>\n<li>Introduction</li>\n<li><a href=\"/posts/2017-10-14-blockly-two\" rel=\"noopener noreferrer\" target=\"_blank\">Blockly Model</a></li>\n<li><a href=\"/posts/2017-10-22-blockly-three\" rel=\"noopener noreferrer\" target=\"_blank\">Code Generator, Interpreter and Runner</a></li>\n<li><a href=\"/posts/2017-10-31-blockly-four\" rel=\"noopener noreferrer\" target=\"_blank\">UGUI Design</a></li>\n</ol>\n<p>For English:</p>\n<ol>\n<li><a href=\"/posts/2021-6-10-ublockly-introduction\" rel=\"noopener noreferrer\" target=\"_blank\">Introduction</a></li>\n<li><a href=\"/posts/2021-6-11-ublockly-model\" rel=\"noopener noreferrer\" target=\"_blank\">Blockly Model</a></li>\n<li><a href=\"/posts/2021-6-12-ublockly-interpreter-runner\" rel=\"noopener noreferrer\" target=\"_blank\">Code Interpreter and Runner</a></li>\n<li><a href=\"/posts/2021-6-13-ublockly-ugui\" rel=\"noopener noreferrer\" target=\"_blank\">UGUI Design</a></li>\n</ol>\n<p><br></p>\n<h2 id=\"section-前言\">前言</h2>\n<p>之前在公司接触了两款带可视化编程的项目，其编程实现不是很理想，扩展性小，无法满足后期越来越复杂多变的编程需求。当我了解了<a href=\"https://developers.google.com/blockly/\" rel=\"noopener noreferrer\" target=\"_blank\">Google Blockly</a>之后，决定尝试实现一套Unity的版本。</p>\n<p>Google Blockly现开发的有3个版本：</p>\n<ul>\n<li>Web： 支持动态生成<code>JavaScript</code>, <code>Python</code>, <code>PHP</code>, <code>Lua</code>, <code>Dart</code>，直接在浏览器中跑<code>JavaScript</code>。</li>\n<li>iOS/Android: 动态生成<code>JavaScript</code>，然后嵌入js runtime跑生成代码。</li>\n</ul>\n<p>直接在Unity中使用Google Blockly有几个问题：</p>\n<ul>\n<li>Web版本需要借助第三方插件。</li>\n<li>iOS/Android版本需要通过插件的方式接入，扩展block的复杂度极高。</li>\n<li>无法支持Unity的特性，例如Coroutine。</li>\n<li>无法使用UGUI，UI交互设计灵活性低。</li>\n</ul>\n<h2 id=\"section-demo-展示\">Demo 展示</h2>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-blockly/Demo.png\" alt=\"\"> </p>\n<h2 id=\"section-框架设计\">框架设计</h2>\n<p>框架分三个模块：Blockly Model、Code Generator &amp; Interpreter、UI，原则是以<strong>Model</strong>为核心驱动，模块彼此独立，开发者可自定义后面两个模块。</p>\n<p><img loading=\"lazy\" src=\"/blog/assets/img-blockly/ModuleDesign.png\" alt=\"Module\"></p>\n<h2 id=\"section-使用、扩展\">使用、扩展</h2>\n<ol>\n<li>使用json定义Block结构。</li>\n<li>如果使用C#，解释该Block为执行代码(code interpreter)。</li>\n<li>如果使用Lua，为该Block生成Lua代码(code generator)。</li>\n<li>如果是特殊的block（带有变形功能），需要提供可供编辑变形的UI。</li>\n</ol>\n<p>接下来的博文会详细提供做法，以及难点解决方案。</p>"},"postNav":{"previous":null,"next":"/posts/2017-10-14-blockly-two"},"morePosts":[{"slug":"2021-6-13-ublockly-ugui","title":"The UGUI Design of uBlockly - Reimplementation of Google Blockly in Unity","date":"2021-06-13T20:00:00+08:00","locale":"en","ogImage":"/blog/assets/img-blockly/Demo.png","readTime":5,"excerpt":"<p>For Chinese:...</p>"},{"slug":"2021-6-12-ublockly-interpreter-runner","title":"The Interpreter and Runner of uBlockly - Reimplementation of Google Blockly in Unity","date":"2021-06-12T11:00:00+08:00","locale":"en","ogImage":"/blog/assets/img-blockly/Demo.png","readTime":6,"excerpt":"<p>For Chinese:...</p>"},{"slug":"2021-6-11-ublockly-model","title":"The Blockly Model of uBlockly - Reimplementation of Google Blockly in Unity","date":"2021-06-11T20:00:00+08:00","locale":"en","ogImage":"/blog/assets/img-blockly/Demo.png","readTime":4,"excerpt":"<p>For Chinese:...</p>"},{"slug":"2021-6-10-ublockly-introduction","title":"Introduction of uBlockly - Reimplementation of Google Blockly in Unity","date":"2021-06-10T20:00:00+08:00","locale":"en","ogImage":"/blog/assets/img-blockly/Demo.png","readTime":1,"excerpt":"<p>For Chinese:...</p>"}]},"__N_SSG":true}